app:
  name: @applicationName@
  version: @version@
spring:
  application:
    name: job
  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${DB_URL:jdbc:postgresql://localhost:5442/job}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:postgres}
    hikari:
      maximum-pool-size: ${DB_MAX_POOL_SIZE:20}
      connection-timeout: ${DB_CONNECTION_TIMEOUT:60000}
      idle-timeout: ${DB_IDLE_TIMEOUT:600000}
      max-lifetime: ${DB_MAX_LIFETIME:1800000}
      leak-detection-threshold: ${DB_LEAK_DETECTION_THRESHOLD:60000}
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6380}
      password: ${REDIS_PASSWORD:null}
job:
  expiredTime: ${JOB_EXPIRED_MS:86400000}
  subscribe:
    success: ${JOB_SUBSCRIBE_SUCCESS:true}
    initialized: ${JOB_SUBSCRIBE_INITIALIZED:true}
    failed: ${JOB_SUBSCRIBE_FAILED:true}
    processed: ${JOB_SUBSCRIBE_PROCESSED:true}
grpc:
  server:
    port: ${JOB_SERVICE_GRPC_PORT:9100} # default: 9090
    keep-alive-timeout: 60
    keep-alive-time: 600
    max-inbound-message-size: 104857600 # TODO: message chunking
server:
  port: ${JOB_SERVICE_PORT:8070}
core:
  kafka: # kafkaプロパティ
    bootstrap:
      servers: ${KAFKA_SERVER:localhost:9094} # kafkaサーバーアドレス
    connection:
      validation:
        timeout: 1000 # 接続検証のタイムアウト時間(Default: 1000, 現在未使用)
    consumer:
      properties:
        "sasl.mechanism": "PLAIN" # SASL認証のメカニズムを指定
#        {} # Kafkaにそのまま渡されるプロパティ. 下記は既に定義されており, 他に設定したい場合や上書きしたい場合に利用.
        # "bootstrap.servers", bootstrapServers)
        # "group.id", subscriberId)
        # "enable.auto.commit", "false")
        # "key.deserializer", "org.apache.kafka.common.serialization.StringDeserializer")
        # "value.deserializer", "org.apache.kafka.common.serialization.ByteArrayDeserializer")
        # "auto.offset.reset", "earliest")
      # back-pressure:
      #   low: 0 # バックログ(未処理)の下限で, これを下回ったconsumerは, 一時停止されている場合に再開する.(default: 0)
      #   high: 100 # バックログの上限で, これを上回ったconsumerは, 受け付けを一時停止して, 未処理のキューがこれを下回るまで処理のハンドルのみ続ける.(default: maxInteger)
      poll-timeout: 100 # Kafkaコンシューマーのポーリングタイムアウトを指定, default: 100msだが, 現在未使用.
  # outbox:
  #   id: 1 # database id generatorを使用する場合に指定
  database:
    schema: ${DB_CORE_SCHEMA:core} # 使用するデータベーススキーマ名
#     current:
#         time:
#             in:
#                 milliseconds:
#                     sql: #{null} # DefaultCoreSqlDialect使用時の現在時刻の設定.
#     outbox:
#         partitioning:
#             outbox:
#                 tables: #{null}
#             message:
#                 partitions: #{null}
management:
  endpoints:
    web:
      exposure:
        include: "*"
#logging:
#  level:
#    org:
#      cresplanex:
#        nova:
#          job:
#            service: DEBUG